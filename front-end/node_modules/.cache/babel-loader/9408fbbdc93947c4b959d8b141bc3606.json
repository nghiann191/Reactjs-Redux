{"ast":null,"code":"import React from \"react\";\nimport { VictoryPie, VictoryLegend } from \"victory\";\nimport \"./StylePieChart.css\";\nimport { connect, useSelector } from \"react-redux\"; // class PieChart extends React.Component {\n// constructor(props) {\n//   super(props);\n//   this.state = {\n//     data: [],\n//     percentIOS:\"\",\n//     percentAndroid:\"\",\n//   };\n// }\n// async componentDidMount() {\n//   const sum = setData();\n//   this.setState({\n//     data: (await sum.payload).data,\n//     percentIOS: (await sum.payload).data[0].percent,\n//     percentAndroid: (await sum.payload).data[1].percent\n//   });\n//   console.log(this.state.data);\n// }\n//   render() {\n//     const { data } = this.props;\n//     console.table(data[0]);\n//     return (\n//       <svg viewBox=\"20 20 900 900\" width=\"700\" height=\"700\">\n//         <VictoryPie\n//           standalone={false}\n//           style={{ labels: { fill: \"none\" } }}\n//           innerRadius={100}\n//           colorScale={[\"#32aeca\", \"#8e3ace\"]}\n//           data={data[0]}\n//           x=\"name\"\n//           y=\"percent\"\n//         />\n//         <VictoryLegend standalone={false} data={data[0]} x={400} y={200} />\n//         <text x=\"22\" y=\"50\">\n//           Device Types\n//         </text>\n//         <text x=\"433\" y=\"237\" >60 %</text>\n//         <text x=\"615\" y=\"220\" >123</text>\n//         <text x=\"433\" y=\"267\" >40 %</text>\n//         <text x=\"615\" y=\"250\" >34</text>\n//       </svg>\n//     );\n//   }\n// }\n// function mapStateToProps({data}) {\n//   return { data };\n// }\n// export default connect(mapStateToProps, null)(PieChart);\n\nexport default function PieChart() {\n  const data = useSelector(state => state);\n}","map":{"version":3,"sources":["/home/nghia/react-training2/front-end/src/components/PieChart/PieChart.js"],"names":["React","VictoryPie","VictoryLegend","connect","useSelector","PieChart","data","state"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,SAA1C;AACA,OAAO,qBAAP;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC,C,CAEA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,eAAe,SAASC,QAAT,GAAmB;AAChC,QAAMC,IAAI,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAV,CAAxB;AACD","sourcesContent":["import React from \"react\";\nimport { VictoryPie, VictoryLegend } from \"victory\";\nimport \"./StylePieChart.css\";\nimport { connect, useSelector } from \"react-redux\";\n\n// class PieChart extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     data: [],\n  //     percentIOS:\"\",\n  //     percentAndroid:\"\",\n  //   };\n  // }\n  // async componentDidMount() {\n  //   const sum = setData();\n  //   this.setState({\n  //     data: (await sum.payload).data,\n  //     percentIOS: (await sum.payload).data[0].percent,\n  //     percentAndroid: (await sum.payload).data[1].percent\n  //   });\n  //   console.log(this.state.data);\n  // }\n  \n//   render() {\n//     const { data } = this.props;\n//     console.table(data[0]);\n//     return (\n//       <svg viewBox=\"20 20 900 900\" width=\"700\" height=\"700\">\n//         <VictoryPie\n//           standalone={false}\n//           style={{ labels: { fill: \"none\" } }}\n//           innerRadius={100}\n//           colorScale={[\"#32aeca\", \"#8e3ace\"]}\n//           data={data[0]}\n          \n//           x=\"name\"\n//           y=\"percent\"\n//         />\n        \n//         <VictoryLegend standalone={false} data={data[0]} x={400} y={200} />\n//         <text x=\"22\" y=\"50\">\n//           Device Types\n//         </text>\n//         <text x=\"433\" y=\"237\" >60 %</text>\n//         <text x=\"615\" y=\"220\" >123</text>\n//         <text x=\"433\" y=\"267\" >40 %</text>\n//         <text x=\"615\" y=\"250\" >34</text>\n//       </svg>\n//     );\n//   }\n// }\n// function mapStateToProps({data}) {\n//   return { data };\n// }\n\n// export default connect(mapStateToProps, null)(PieChart);\n\nexport default function PieChart(){\n  const data = useSelector(state => state)\n}"]},"metadata":{},"sourceType":"module"}