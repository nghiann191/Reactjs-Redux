{"ast":null,"code":"import { ActionTypes } from \"../constants/constants\";\nimport axios from \"axios\";\nexport const setData = () => {\n  let url = \"http://localhost:8080/device_summary\";\n  let headers = {\n    token: localStorage.getItem(\"token\")\n  };\n  return dispatch => {\n    dispatch({\n      type: ActionTypes.SHOW_LOADING_PIECHART,\n      isLoading: true\n    });\n    axios.get(url, {\n      headers\n    }).then(e => {\n      dispatch({\n        type: ActionTypes.SHOW_DATA,\n        data: e.data\n      });\n    }).catch(error => {\n      console.log(error);\n    }).finally(() => {\n      dispatch({\n        type: ActionTypes.HIDE_LOADING_PIECHART,\n        isLoading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/nghia/react-training2/front-end/src/actions/ActionPieChart.js"],"names":["ActionTypes","axios","setData","url","headers","token","localStorage","getItem","dispatch","type","SHOW_LOADING_PIECHART","isLoading","get","then","e","SHOW_DATA","data","catch","error","console","log","finally","HIDE_LOADING_PIECHART"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,MAAIC,GAAG,GAAG,sCAAV;AACA,MAAIC,OAAO,GAAG;AACVC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADG,GAAd;AAGA,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,WAAW,CAACU,qBAApB;AAA2CC,MAAAA,SAAS,EAAE;AAAtD,KAAD,CAAR;AACAV,IAAAA,KAAK,CACAW,GADL,CACST,GADT,EACc;AAAEC,MAAAA;AAAF,KADd,EAEKS,IAFL,CAEUC,CAAC,IAAI;AACPN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAET,WAAW,CAACe,SAApB;AAA+BC,QAAAA,IAAI,EAAEF,CAAC,CAACE;AAAvC,OAAD,CAAR;AACH,KAJL,EAKKC,KALL,CAKWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAPL,EAQKG,OARL,CAQa,MAAM;AACXb,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAET,WAAW,CAACsB,qBAApB;AAA2CX,QAAAA,SAAS,EAAE;AAAtD,OAAD,CAAR;AACH,KAVL;AAWH,GAbD;AAcH,CAnBM","sourcesContent":["import { ActionTypes } from \"../constants/constants\";\nimport axios from \"axios\";\n\nexport const setData = () => {\n    let url = \"http://localhost:8080/device_summary\";\n    let headers = {\n        token: localStorage.getItem(\"token\")\n    };\n    return dispatch => {\n        dispatch({ type: ActionTypes.SHOW_LOADING_PIECHART, isLoading: true });\n        axios\n            .get(url, { headers })\n            .then(e => {\n                dispatch({ type: ActionTypes.SHOW_DATA, data: e.data });\n            })\n            .catch(error => {\n                console.log(error);\n            })\n            .finally(() => {\n                dispatch({ type: ActionTypes.HIDE_LOADING_PIECHART, isLoading: false });\n            });\n    };\n};"]},"metadata":{},"sourceType":"module"}