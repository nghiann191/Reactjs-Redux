{"ast":null,"code":"var _jsxFileName = \"/home/nghia/react-training2/front-end/src/components/PieChart/PieChart.js\";\nimport React from \"react\";\nimport { VictoryPie, VictoryLegend } from \"victory\";\nimport \"./StylePieChart.css\";\nimport { connect } from \"react-redux\";\nimport { setData } from \"../../actions/index\";\n\nclass PieChart extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     data: [],\n  //     percentIOS:\"\",\n  //     percentAndroid:\"\",\n  //   };\n  // }\n  // async componentDidMount() {\n  //   const sum = setData();\n  //   this.setState({\n  //     data: (await sum.payload).data,\n  //     percentIOS: (await sum.payload).data[0].percent,\n  //     percentAndroid: (await sum.payload).data[1].percent\n  //   });\n  //   console.log(this.state.data);\n  // }\n  render() {\n    const data = this.props.data;\n    console.log(this.props);\n    return React.createElement(\"svg\", {\n      viewBox: \"20 20 900 900\",\n      width: \"700\",\n      height: \"700\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(VictoryPie, {\n      standalone: false,\n      style: {\n        labels: {\n          fill: \"none\"\n        }\n      },\n      innerRadius: 100,\n      colorScale: [\"#32aeca\", \"#8e3ace\"],\n      data: data,\n      x: \"name\",\n      y: \"percent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(VictoryLegend, {\n      standalone: false,\n      data: data,\n      x: 400,\n      y: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"text\", {\n      x: \"22\",\n      y: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Device Types\"));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    data: state.data\n  };\n}\n\nexport default connect(mapStateToProps, null)(PieChart);","map":{"version":3,"sources":["/home/nghia/react-training2/front-end/src/components/PieChart/PieChart.js"],"names":["React","VictoryPie","VictoryLegend","connect","setData","PieChart","Component","render","data","props","console","log","labels","fill","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,SAA1C;AACA,OAAO,qBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AAAA,UACCC,IADD,GACU,KAAKC,KADf,CACCD,IADD;AAEPE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACA,WACE;AAAK,MAAA,OAAO,EAAC,eAAb;AAA6B,MAAA,KAAK,EAAC,KAAnC;AAAyC,MAAA,MAAM,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAE,KADd;AAEE,MAAA,KAAK,EAAE;AAAEG,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AAAV,OAFT;AAGE,MAAA,WAAW,EAAE,GAHf;AAIE,MAAA,UAAU,EAAE,CAAC,SAAD,EAAY,SAAZ,CAJd;AAKE,MAAA,IAAI,EAAEL,IALR;AAME,MAAA,CAAC,EAAC,MANJ;AAOE,MAAA,CAAC,EAAC,SAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAE,KAA3B;AAAkC,MAAA,IAAI,EAAEA,IAAxC;AAA8C,MAAA,CAAC,EAAE,GAAjD;AAAsD,MAAA,CAAC,EAAE,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE;AAAM,MAAA,CAAC,EAAC,IAAR;AAAa,MAAA,CAAC,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,CADF;AAsBD;;AA5CoC;;AA8CvC,SAASM,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AAAEP,IAAAA,IAAI,EAAEO,KAAK,CAACP;AAAd,GAAP;AACD;;AAED,eAAeL,OAAO,CAACW,eAAD,EAAkB,IAAlB,CAAP,CAA+BT,QAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport { VictoryPie, VictoryLegend } from \"victory\";\nimport \"./StylePieChart.css\";\nimport { connect } from \"react-redux\";\nimport { setData } from \"../../actions/index\";\n\nclass PieChart extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     data: [],\n  //     percentIOS:\"\",\n  //     percentAndroid:\"\",\n  //   };\n  // }\n  // async componentDidMount() {\n  //   const sum = setData();\n  //   this.setState({\n  //     data: (await sum.payload).data,\n  //     percentIOS: (await sum.payload).data[0].percent,\n  //     percentAndroid: (await sum.payload).data[1].percent\n  //   });\n  //   console.log(this.state.data);\n  // }\n  \n  render() {\n    const { data } = this.props;\n    console.log(this.props);\n    return (\n      <svg viewBox=\"20 20 900 900\" width=\"700\" height=\"700\">\n        <VictoryPie\n          standalone={false}\n          style={{ labels: { fill: \"none\" } }}\n          innerRadius={100}\n          colorScale={[\"#32aeca\", \"#8e3ace\"]}\n          data={data}\n          x=\"name\"\n          y=\"percent\"\n        />\n\n        <VictoryLegend standalone={false} data={data} x={400} y={200} />\n        <text x=\"22\" y=\"50\">\n          Device Types\n        </text>\n        {/* <text x=\"433\" y=\"237\" >{this.state.percentIOS} %</text>\n          <text x=\"615\" y=\"220\" >{this.state.percentIOS * 19}</text>\n          <text x=\"433\" y=\"267\" >{this.state.percentAndroid} %</text>\n          <text x=\"615\" y=\"250\" >{this.state.percentAndroid * 19}</text> */}\n      </svg>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return { data: state.data };\n}\n\nexport default connect(mapStateToProps, null)(PieChart);\n"]},"metadata":{},"sourceType":"module"}