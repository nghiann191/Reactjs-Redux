{"ast":null,"code":"var _jsxFileName = \"/home/nghia/react-training2/front-end/src/components/HeatChart/HeatChart.js\";\nimport React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { connect } from \"react-redux\";\n\nclass HeatChart extends React.Component {\n  render() {\n    const getDataHeat = this.props.getDataHeatChart;\n    const data = getDataHeat.getDataHeatChart.map(e => e.data);\n    console.log(getDataHeat.getDataHeatChart);\n    const options = {\n      chart: {\n        height: 200,\n        type: \"heatmap\"\n      },\n      colors: [function ({\n        value,\n        seriesIndex,\n        w\n      }) {\n        if (value < 30) {\n          return '#7E36AF';\n        } else {\n          return '#D9534F';\n        }\n      }, function ({\n        value,\n        seriesIndex,\n        w\n      }) {\n        if (value < 50) {\n          return '#7E36AF';\n        } else {\n          return '#D9534F';\n        }\n      }],\n      xaxis: {\n        type: 'category',\n        categories: [],\n        labels: {\n          show: true,\n          rotate: -45,\n          rotateAlways: false,\n          hideOverlappingLabels: true,\n          showDuplicates: false,\n          trim: true,\n          minHeight: undefined,\n          maxHeight: 120,\n          style: {\n            colors: [],\n            fontSize: '12px',\n            fontFamily: 'Helvetica, Arial, sans-serif',\n            cssClass: 'apexcharts-xaxis-label'\n          },\n          offsetX: 0,\n          offsetY: 0,\n          format: undefined,\n          formatter: undefined,\n          datetimeFormatter: {\n            year: 'yyyy',\n            month: \"MMM 'yy\",\n            day: 'dd MMM',\n            hour: 'HH:mm'\n          }\n        },\n        axisBorder: {\n          show: true,\n          color: '#78909C',\n          height: 1,\n          width: '100%',\n          offsetX: 0,\n          offsetY: 0\n        },\n        axisTicks: {\n          show: true,\n          borderType: 'solid',\n          color: '#78909C',\n          height: 6,\n          offsetX: 0,\n          offsetY: 0\n        },\n        tickAmount: undefined,\n        tickPlacement: 'between',\n        min: undefined,\n        max: undefined,\n        range: undefined,\n        floating: false,\n        position: 'bottom',\n        title: {\n          text: undefined,\n          offsetX: 0,\n          offsetY: 0,\n          style: {\n            color: undefined,\n            fontSize: '12px',\n            fontFamily: 'Helvetica, Arial, sans-serif',\n            cssClass: 'apexcharts-xaxis-title'\n          }\n        },\n        crosshairs: {\n          show: true,\n          width: 1,\n          position: 'back',\n          opacity: 0.9,\n          stroke: {\n            color: '#b6b6b6',\n            width: 0,\n            dashArray: 0\n          },\n          fill: {\n            type: 'solid',\n            color: '#B1B9C4',\n            gradient: {\n              colorFrom: '#D8E3F0',\n              colorTo: '#BED1E6',\n              stops: [0, 100],\n              opacityFrom: 0.4,\n              opacityTo: 0.5\n            }\n          },\n          dropShadow: {\n            enabled: false,\n            top: 0,\n            left: 0,\n            blur: 1,\n            opacity: 0.4\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: 0,\n            fontFamily: 0\n          }\n        }\n      }\n    };\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      style: {\n        marginLeft: \"600px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      options: options,\n      series: getDataHeat.getDataHeatChart,\n      type: \"heatmap\",\n      height: \"200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    getDataHeatChart: state.getDataHeatChart\n  };\n}\n\nexport default connect(mapStateToProps, null)(HeatChart);","map":{"version":3,"sources":["/home/nghia/react-training2/front-end/src/components/HeatChart/HeatChart.js"],"names":["React","Chart","connect","HeatChart","Component","render","getDataHeat","props","getDataHeatChart","data","map","e","console","log","options","chart","height","type","colors","value","seriesIndex","w","xaxis","categories","labels","show","rotate","rotateAlways","hideOverlappingLabels","showDuplicates","trim","minHeight","undefined","maxHeight","style","fontSize","fontFamily","cssClass","offsetX","offsetY","format","formatter","datetimeFormatter","year","month","day","hour","axisBorder","color","width","axisTicks","borderType","tickAmount","tickPlacement","min","max","range","floating","position","title","text","crosshairs","opacity","stroke","dashArray","fill","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","dropShadow","enabled","top","left","blur","tooltip","marginLeft","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { connect } from \"react-redux\";\n\nclass HeatChart extends React.Component {\n  render() {\n    const getDataHeat = this.props.getDataHeatChart;\n    const data = getDataHeat.getDataHeatChart.map(e => e.data);\n    console.log(getDataHeat.getDataHeatChart);\n    const options = {\n      chart : {\n        height: 200,\n        type:\"heatmap\"\n      },\n      colors: [function({ value, seriesIndex, w }) {\n        if (value < 30) {\n            return '#7E36AF'\n        } else {\n            return '#D9534F'\n        }\n      }, function({ value, seriesIndex, w }) {\n        if (value < 50) {\n            return '#7E36AF'\n        } else {\n            return '#D9534F'\n        }\n      }],\n      xaxis: {\n        type: 'category',\n        categories: [],\n        labels: {\n            show: true,\n            rotate: -45,\n            rotateAlways: false,\n            hideOverlappingLabels: true,\n            showDuplicates: false,\n            trim: true,\n            minHeight: undefined,\n            maxHeight: 120,\n            style: {\n                colors: [],\n                fontSize: '12px',\n                fontFamily: 'Helvetica, Arial, sans-serif',\n                cssClass: 'apexcharts-xaxis-label',\n            },\n            offsetX: 0,\n            offsetY: 0,\n            format: undefined,\n            formatter: undefined,\n            datetimeFormatter: {\n                year: 'yyyy',\n                month: \"MMM 'yy\",\n                day: 'dd MMM',\n                hour: 'HH:mm',\n            },\n        },\n        axisBorder: {\n            show: true,\n            color: '#78909C',\n            height: 1,\n            width: '100%',\n            offsetX: 0,\n            offsetY: 0\n        },\n        axisTicks: {\n            show: true,\n            borderType: 'solid',\n            color: '#78909C',\n            height: 6,\n            offsetX: 0,\n            offsetY: 0\n        },\n        tickAmount: undefined,\n        tickPlacement: 'between',\n        min: undefined,\n        max: undefined,\n        range: undefined,\n        floating: false,\n        position: 'bottom',\n        title: {\n            text: undefined,\n            offsetX: 0,\n            offsetY: 0,\n            style: {\n                color: undefined,\n                fontSize: '12px',\n                fontFamily: 'Helvetica, Arial, sans-serif',\n                cssClass: 'apexcharts-xaxis-title',\n            },\n        },\n        crosshairs: {\n            show: true,\n            width: 1,\n            position: 'back',\n            opacity: 0.9,        \n            stroke: {\n                color: '#b6b6b6',\n                width: 0,\n                dashArray: 0,\n            },\n            fill: {\n                type: 'solid',\n                color: '#B1B9C4',\n                gradient: {\n                    colorFrom: '#D8E3F0',\n                    colorTo: '#BED1E6',\n                    stops: [0, 100],\n                    opacityFrom: 0.4,\n                    opacityTo: 0.5,\n                },\n            },\n            dropShadow: {\n                enabled: false,\n                top: 0,\n                left: 0,\n                blur: 1,\n                opacity: 0.4,\n            },\n        },\n        tooltip: {\n            enabled: true,\n            formatter: undefined,\n            offsetY: 0,\n            style: {\n              fontSize: 0,\n              fontFamily: 0,\n            },\n        },\n    }\n    \n    }\n    return (\n      <div id=\"chart\" style={{marginLeft:\"600px\"}}>\n        <Chart\n        options={options}\n        series={getDataHeat.getDataHeatChart}\n        type=\"heatmap\"\n        height=\"200\"\n         />\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    getDataHeatChart: state.getDataHeatChart\n  };\n}\nexport default connect(mapStateToProps, null)(HeatChart);\n"]},"metadata":{},"sourceType":"module"}