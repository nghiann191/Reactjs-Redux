{"ast":null,"code":"var _jsxFileName = \"/home/nghia/react-training2/front-end/src/components/HeatChart/HeatChart.js\";\nimport React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { connect } from \"react-redux\";\n\nclass HeatChart extends React.Component {\n  render() {\n    const getDataHeat = this.props.getDataHeatChart;\n    const data = getDataHeat.getDataHeatChart.map(e => e.data);\n    console.log(getDataHeat.getDataHeatChart);\n    const options = {\n      chart: {\n        height: 200,\n        type: \"heatmap\"\n      },\n      title: {\n        text: 'Device by hour',\n        align: 'left',\n        margin: 10,\n        offsetX: 0,\n        offsetY: 0,\n        floating: false,\n        style: {\n          fontSize: '16px',\n          color: '#263238'\n        }\n      },\n      // colors: [function({ value, seriesIndex, w }) {\n      //   if (value < 30) {\n      //       return '#7E36AF'\n      //   } else {\n      //       return '#D9534F'\n      //   }\n      // }, function({ value, seriesIndex, w }) {\n      //   if (value < 50) {\n      //       return '#7E36AF'\n      //   } else {\n      //       return '#D9534F'\n      //   }\n      // }],\n      xaxis: {\n        type: 'category',\n        categories: [],\n        labels: {\n          show: true,\n          rotate: -45,\n          rotateAlways: false,\n          hideOverlappingLabels: true,\n          showDuplicates: false,\n          trim: true,\n          minHeight: undefined,\n          maxHeight: 120,\n          style: {\n            colors: [],\n            fontSize: '12px',\n            fontFamily: 'Helvetica, Arial, sans-serif',\n            cssClass: 'apexcharts-xaxis-label'\n          },\n          offsetX: 0,\n          offsetY: 0,\n          format: undefined,\n          formatter: undefined,\n          datetimeFormatter: {\n            year: 'yyyy',\n            month: \"MMM 'yy\",\n            day: 'dd MMM',\n            hour: 'HH:mm'\n          }\n        },\n        // axisBorder: {\n        //     show: true,\n        //     color: '#78909C',\n        //     height: 1,\n        //     width: '100%',\n        //     offsetX: 0,\n        //     offsetY: 0\n        // },\n        // axisTicks: {\n        //     show: true,\n        //     borderType: 'solid',\n        //     color: '#78909C',\n        //     height: 6,\n        //     offsetX: 0,\n        //     offsetY: 0\n        // },\n        tickAmount: undefined,\n        tickPlacement: 'between',\n        position: 'bottom'\n      }\n    };\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      style: {\n        marginLeft: \"600px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      options: options,\n      series: getDataHeat.getDataHeatChart,\n      type: \"heatmap\",\n      height: \"200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    getDataHeatChart: state.getDataHeatChart\n  };\n}\n\nexport default connect(mapStateToProps, null)(HeatChart);","map":{"version":3,"sources":["/home/nghia/react-training2/front-end/src/components/HeatChart/HeatChart.js"],"names":["React","Chart","connect","HeatChart","Component","render","getDataHeat","props","getDataHeatChart","data","map","e","console","log","options","chart","height","type","title","text","align","margin","offsetX","offsetY","floating","style","fontSize","color","xaxis","categories","labels","show","rotate","rotateAlways","hideOverlappingLabels","showDuplicates","trim","minHeight","undefined","maxHeight","colors","fontFamily","cssClass","format","formatter","datetimeFormatter","year","month","day","hour","tickAmount","tickPlacement","position","marginLeft","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { connect } from \"react-redux\";\n\nclass HeatChart extends React.Component {\n  render() {\n    const getDataHeat = this.props.getDataHeatChart;\n    const data = getDataHeat.getDataHeatChart.map(e => e.data);\n    console.log(getDataHeat.getDataHeatChart);\n    const options = {\n      chart : {\n        height: 200,\n        type:\"heatmap\"\n      },\n      title: {\n        text: 'Device by hour',\n        align: 'left',\n        margin: 10,\n        offsetX: 0,\n        offsetY: 0,\n        floating: false,\n        style: {\n          fontSize:  '16px',\n          color:  '#263238'\n        },\n    },\n    \n      // colors: [function({ value, seriesIndex, w }) {\n      //   if (value < 30) {\n      //       return '#7E36AF'\n      //   } else {\n      //       return '#D9534F'\n      //   }\n      // }, function({ value, seriesIndex, w }) {\n      //   if (value < 50) {\n      //       return '#7E36AF'\n      //   } else {\n      //       return '#D9534F'\n      //   }\n      // }],\n      xaxis: {\n        type: 'category',\n        categories: [],\n        labels: {\n            show: true,\n            rotate: -45,\n            rotateAlways: false,\n            hideOverlappingLabels: true,\n            showDuplicates: false,\n            trim: true,\n            minHeight: undefined,\n            maxHeight: 120,\n            style: {\n                colors: [],\n                fontSize: '12px',\n                fontFamily: 'Helvetica, Arial, sans-serif',\n                cssClass: 'apexcharts-xaxis-label',\n            },\n            offsetX: 0,\n            offsetY: 0,\n            format: undefined,\n            formatter: undefined,\n            datetimeFormatter: {\n                year: 'yyyy',\n                month: \"MMM 'yy\",\n                day: 'dd MMM',\n                hour: 'HH:mm',\n            },\n        },\n        // axisBorder: {\n        //     show: true,\n        //     color: '#78909C',\n        //     height: 1,\n        //     width: '100%',\n        //     offsetX: 0,\n        //     offsetY: 0\n        // },\n        // axisTicks: {\n        //     show: true,\n        //     borderType: 'solid',\n        //     color: '#78909C',\n        //     height: 6,\n        //     offsetX: 0,\n        //     offsetY: 0\n        // },\n        tickAmount: undefined,\n        tickPlacement: 'between',\n        \n        position: 'bottom',\n        \n        \n    }\n    \n    }\n    return (\n      <div id=\"chart\" style={{marginLeft:\"600px\"}}>\n        <Chart\n        options={options}\n        series={getDataHeat.getDataHeatChart}\n        type=\"heatmap\"\n        height=\"200\"\n         />\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    getDataHeatChart: state.getDataHeatChart\n  };\n}\nexport default connect(mapStateToProps, null)(HeatChart);\n"]},"metadata":{},"sourceType":"module"}