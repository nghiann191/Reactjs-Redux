{"ast":null,"code":"var _jsxFileName = \"/home/nghia/react-training2/front-end/src/components/HeatChart/HeatChart.js\";\nimport React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { connect } from \"react-redux\";\n\nclass HeatChart extends React.Component {\n  render() {\n    const getDataHeat = this.props.getDataHeatChart;\n    const data = getDataHeat.getDataHeatChart.map(e => e.data);\n    console.log(getDataHeat.getDataHeatChart);\n    const options = {\n      chart: {\n        height: 200,\n        type: \"heatmap\",\n        toolbar: {\n          show: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      title: {\n        text: \"Device by hour\",\n        align: \"left\",\n        marginBottom: 0,\n        offsetX: 0,\n        offsetY: 0,\n        floating: false,\n        style: {\n          fontSize: \"16px\",\n          color: \"#263238\"\n        }\n      },\n      yaxis: {\n        show: false\n      },\n      colors: [\"#6232ca\"]\n    };\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      style: {\n        width: \"700px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      options: options,\n      series: getDataHeat.getDataHeatChart,\n      type: \"heatmap\",\n      height: \"200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    getDataHeatChart: state.getDataHeatChart\n  };\n}\n\nexport default connect(mapStateToProps, null)(HeatChart);","map":{"version":3,"sources":["/home/nghia/react-training2/front-end/src/components/HeatChart/HeatChart.js"],"names":["React","Chart","connect","HeatChart","Component","render","getDataHeat","props","getDataHeatChart","data","map","e","console","log","options","chart","height","type","toolbar","show","dataLabels","enabled","title","text","align","marginBottom","offsetX","offsetY","floating","style","fontSize","color","yaxis","colors","width","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,gBAA/B;AACA,UAAMC,IAAI,GAAGH,WAAW,CAACE,gBAAZ,CAA6BE,GAA7B,CAAiCC,CAAC,IAAIA,CAAC,CAACF,IAAxC,CAAb;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAW,CAACE,gBAAxB;AACA,UAAMM,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,GADH;AAELC,QAAAA,IAAI,EAAE,SAFD;AAGLC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE;AADC;AAHJ,OADO;AAQdC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OARE;AAWdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,gBADD;AAELC,QAAAA,KAAK,EAAE,MAFF;AAGLC,QAAAA,YAAY,EAAE,CAHT;AAILC,QAAAA,OAAO,EAAE,CAJJ;AAKLC,QAAAA,OAAO,EAAE,CALJ;AAMLC,QAAAA,QAAQ,EAAE,KANL;AAOLC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,MADL;AAELC,UAAAA,KAAK,EAAE;AAFF;AAPF,OAXO;AAuBdC,MAAAA,KAAK,EAAE;AACHb,QAAAA,IAAI,EAAE;AADH,OAvBO;AA0Bdc,MAAAA,MAAM,EAAE,CAAC,SAAD;AA1BM,KAAhB;AA4BA,WACE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAgB,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAEpB,OADX;AAEE,MAAA,MAAM,EAAER,WAAW,CAACE,gBAFtB;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,MAAM,EAAC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD;;AA3CqC;;AA6CxC,SAAS2B,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACL5B,IAAAA,gBAAgB,EAAE4B,KAAK,CAAC5B;AADnB,GAAP;AAGD;;AACD,eAAeN,OAAO,CAACiC,eAAD,EAAkB,IAAlB,CAAP,CAA+BhC,SAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { connect } from \"react-redux\";\n\nclass HeatChart extends React.Component {\n  render() {\n    const getDataHeat = this.props.getDataHeatChart;\n    const data = getDataHeat.getDataHeatChart.map(e => e.data);\n    console.log(getDataHeat.getDataHeatChart);\n    const options = {\n      chart: {\n        height: 200,\n        type: \"heatmap\",\n        toolbar: {\n          show: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      title: {\n        text: \"Device by hour\",\n        align: \"left\",\n        marginBottom: 0,\n        offsetX: 0,\n        offsetY: 0,\n        floating: false,\n        style: {\n          fontSize: \"16px\",\n          color: \"#263238\"\n        }\n      },\n      yaxis: {\n          show: false\n      },\n      colors: [\"#6232ca\"]\n    };\n    return (\n      <div id=\"chart\" style={{width:\"700px\"}}>\n        <Chart\n          options={options}\n          series={getDataHeat.getDataHeatChart}\n          type=\"heatmap\"\n          height=\"200\"\n        />\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    getDataHeatChart: state.getDataHeatChart\n  };\n}\nexport default connect(mapStateToProps, null)(HeatChart);\n"]},"metadata":{},"sourceType":"module"}