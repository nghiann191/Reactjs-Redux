{"ast":null,"code":"var _jsxFileName = \"/home/nghia/react-training2/front-end/src/components/PieChart/PieChart.js\";\nimport React from \"react\";\nimport { VictoryPie, VictoryLegend } from \"victory\";\nimport \"./StylePieChart.css\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { ActionTypes } from \"../../constants/constants\"; // class PieChart extends React.Component {\n// constructor(props) {\n//   super(props);\n//   this.state = {\n//     data: [],\n//     percentIOS:\"\",\n//     percentAndroid:\"\",\n//   };\n// }\n// async componentDidMount() {\n//   const sum = setData();\n//   this.setState({\n//     data: (await sum.payload).data,\n//     percentIOS: (await sum.payload).data[0].percent,\n//     percentAndroid: (await sum.payload).data[1].percent\n//   });\n//   console.log(this.state.data);\n// }\n//   render() {\n//     const { data } = this.props;\n//     console.table(data[0]);\n//     return (\n//       <svg viewBox=\"20 20 900 900\" width=\"700\" height=\"700\">\n//         <VictoryPie\n//           standalone={false}\n//           style={{ labels: { fill: \"none\" } }}\n//           innerRadius={100}\n//           colorScale={[\"#32aeca\", \"#8e3ace\"]}\n//           data={data[0]}\n//           x=\"name\"\n//           y=\"percent\"\n//         />\n//         <VictoryLegend standalone={false} data={data[0]} x={400} y={200} />\n//         <text x=\"22\" y=\"50\">\n//           Device Types\n//         </text>\n//         <text x=\"433\" y=\"237\" >60 %</text>\n//         <text x=\"615\" y=\"220\" >123</text>\n//         <text x=\"433\" y=\"267\" >40 %</text>\n//         <text x=\"615\" y=\"250\" >34</text>\n//       </svg>\n//     );\n//   }\n// }\n// function mapStateToProps({data}) {\n//   return { data };\n// }\n// export default connect(mapStateToProps, null)(PieChart);\n\nexport default function PieChart() {\n  const result = useSelector(state => state.data);\n  const dispatch = useDispatch();\n\n  const setData = () => {\n    dispatch({\n      type: ActionTypes.SHOW_DATA\n    });\n  };\n\n  return React.createElement(\"svg\", {\n    viewBox: \"20 20 900 900\",\n    width: \"700\",\n    height: \"700\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(VictoryPie, {\n    standalone: false,\n    style: {\n      labels: {\n        fill: \"none\"\n      }\n    },\n    innerRadius: 100,\n    colorScale: [\"#32aeca\", \"#8e3ace\"],\n    data: setData,\n    x: \"name\",\n    y: \"percent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(VictoryLegend, {\n    standalone: false,\n    data: setData,\n    x: 400,\n    y: 200,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    x: \"22\",\n    y: \"50\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Device Types\"), React.createElement(\"text\", {\n    x: \"433\",\n    y: \"237\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"60 %\"), React.createElement(\"text\", {\n    x: \"615\",\n    y: \"220\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"123\"), React.createElement(\"text\", {\n    x: \"433\",\n    y: \"267\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"40 %\"), React.createElement(\"text\", {\n    x: \"615\",\n    y: \"250\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"34\"));\n}","map":{"version":3,"sources":["/home/nghia/react-training2/front-end/src/components/PieChart/PieChart.js"],"names":["React","VictoryPie","VictoryLegend","connect","useSelector","useDispatch","ActionTypes","PieChart","result","state","data","dispatch","setData","type","SHOW_DATA","labels","fill"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,SAA1C;AACA,OAAO,qBAAP;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,SAASC,WAAT,QAA4B,2BAA5B,C,CAEA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,eAAe,SAASC,QAAT,GAAmB;AAChC,QAAMC,MAAM,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1B;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AACA,QAAMO,OAAO,GAAG,MAAM;AACpBD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACP,WAAW,CAACQ;AAAlB,KAAD,CAAR;AACD,GAFD;;AAGA,SACE;AAAK,IAAA,OAAO,EAAC,eAAb;AAA6B,IAAA,KAAK,EAAC,KAAnC;AAAyC,IAAA,MAAM,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,UAAU,EAAE,KADd;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAAV,KAFT;AAGE,IAAA,WAAW,EAAE,GAHf;AAIE,IAAA,UAAU,EAAE,CAAC,SAAD,EAAY,SAAZ,CAJd;AAKE,IAAA,IAAI,EAAEJ,OALR;AAOE,IAAA,CAAC,EAAC,MAPJ;AAQE,IAAA,CAAC,EAAC,SARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE,oBAAC,aAAD;AAAe,IAAA,UAAU,EAAE,KAA3B;AAAkC,IAAA,IAAI,EAAEA,OAAxC;AAAiD,IAAA,CAAC,EAAE,GAApD;AAAyD,IAAA,CAAC,EAAE,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE;AAAM,IAAA,CAAC,EAAC,IAAR;AAAa,IAAA,CAAC,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,EAgBE;AAAM,IAAA,CAAC,EAAC,KAAR;AAAc,IAAA,CAAC,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,EAiBE;AAAM,IAAA,CAAC,EAAC,KAAR;AAAc,IAAA,CAAC,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAjBF,EAkBE;AAAM,IAAA,CAAC,EAAC,KAAR;AAAc,IAAA,CAAC,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,EAmBE;AAAM,IAAA,CAAC,EAAC,KAAR;AAAc,IAAA,CAAC,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAnBF,CADF;AAuBD","sourcesContent":["import React from \"react\";\nimport { VictoryPie, VictoryLegend } from \"victory\";\nimport \"./StylePieChart.css\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { ActionTypes } from \"../../constants/constants\";\n\n// class PieChart extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     data: [],\n  //     percentIOS:\"\",\n  //     percentAndroid:\"\",\n  //   };\n  // }\n  // async componentDidMount() {\n  //   const sum = setData();\n  //   this.setState({\n  //     data: (await sum.payload).data,\n  //     percentIOS: (await sum.payload).data[0].percent,\n  //     percentAndroid: (await sum.payload).data[1].percent\n  //   });\n  //   console.log(this.state.data);\n  // }\n  \n//   render() {\n//     const { data } = this.props;\n//     console.table(data[0]);\n//     return (\n//       <svg viewBox=\"20 20 900 900\" width=\"700\" height=\"700\">\n//         <VictoryPie\n//           standalone={false}\n//           style={{ labels: { fill: \"none\" } }}\n//           innerRadius={100}\n//           colorScale={[\"#32aeca\", \"#8e3ace\"]}\n//           data={data[0]}\n          \n//           x=\"name\"\n//           y=\"percent\"\n//         />\n        \n//         <VictoryLegend standalone={false} data={data[0]} x={400} y={200} />\n//         <text x=\"22\" y=\"50\">\n//           Device Types\n//         </text>\n//         <text x=\"433\" y=\"237\" >60 %</text>\n//         <text x=\"615\" y=\"220\" >123</text>\n//         <text x=\"433\" y=\"267\" >40 %</text>\n//         <text x=\"615\" y=\"250\" >34</text>\n//       </svg>\n//     );\n//   }\n// }\n// function mapStateToProps({data}) {\n//   return { data };\n// }\n\n// export default connect(mapStateToProps, null)(PieChart);\n\nexport default function PieChart(){\n  const result = useSelector(state => state.data);\n  const dispatch = useDispatch();\n  const setData = () => {\n    dispatch({type:ActionTypes.SHOW_DATA});\n  }\n  return (\n    <svg viewBox=\"20 20 900 900\" width=\"700\" height=\"700\">\n      <VictoryPie\n        standalone={false}\n        style={{ labels: { fill: \"none\" } }}\n        innerRadius={100}\n        colorScale={[\"#32aeca\", \"#8e3ace\"]}\n        data={setData}\n        \n        x=\"name\"\n        y=\"percent\"\n      />\n      \n      <VictoryLegend standalone={false} data={setData} x={400} y={200} />\n      <text x=\"22\" y=\"50\">\n        Device Types\n      </text>\n      <text x=\"433\" y=\"237\" >60 %</text>\n      <text x=\"615\" y=\"220\" >123</text>\n      <text x=\"433\" y=\"267\" >40 %</text>\n      <text x=\"615\" y=\"250\" >34</text>\n    </svg>\n  );\n}"]},"metadata":{},"sourceType":"module"}