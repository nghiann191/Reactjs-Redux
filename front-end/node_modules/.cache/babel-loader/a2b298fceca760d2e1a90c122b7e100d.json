{"ast":null,"code":"var _jsxFileName = \"/home/nghia/react-training2/front-end/src/components/HeatChart/SumaryChart.js\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nclass SumaryChart extends React.Component {\n  render() {\n    const dataHeat = this.props.getDataHeatChart;\n    const list = dataHeat.getDataHeatChart.map(e => e.data.map(a => a.y));\n    const series = [{\n      data: [_.sum(list[0]), _.sum(list[1]), _.sum(list[2]), _.sum(list[3]), _.sum(list[4]), _.sum(list[5]), _.sum(list[6])]\n    }];\n    const options = {\n      chart: {\n        type: 'bar',\n        height: 300,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true\n        }\n      },\n      dataLabels: {\n        enabled: true,\n        background: {\n          enabled: false,\n          foreColor: '#fff',\n          padding: 0,\n          borderRadius: 0,\n          borderWidth: 0,\n          borderColor: 'red',\n          opacity: 0.9\n        }\n      },\n      colors: ['#589e71'],\n      xaxis: {\n        categories: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        labels: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          offsetY: 5\n        }\n      }\n    };\n    return React.createElement(\"div\", {\n      style: {\n        width: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      options: options,\n      series: series,\n      type: \"bar\",\n      height: \"300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    getDataHeatChart: state.getDataHeatChart\n  };\n}\n\nexport default connect(mapStateToProps, null)(SumaryChart);","map":{"version":3,"sources":["/home/nghia/react-training2/front-end/src/components/HeatChart/SumaryChart.js"],"names":["React","Chart","connect","_","SumaryChart","Component","render","dataHeat","props","getDataHeatChart","list","map","e","data","a","y","series","sum","options","chart","type","height","toolbar","show","plotOptions","bar","horizontal","dataLabels","enabled","background","foreColor","padding","borderRadius","borderWidth","borderColor","opacity","colors","xaxis","categories","labels","yaxis","offsetY","width","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAAyC;AACvCC,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,gBAA5B;AACA,UAAMC,IAAI,GAAGH,QAAQ,CAACE,gBAAT,CAA0BE,GAA1B,CAA8BC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOF,GAAP,CAAWG,CAAC,IAAIA,CAAC,CAACC,CAAlB,CAAnC,CAAb;AACA,UAAMC,MAAM,GAAG,CAAC;AACdH,MAAAA,IAAI,EAAE,CAACV,CAAC,CAACc,GAAF,CAAMP,IAAI,CAAC,CAAD,CAAV,CAAD,EAAgBP,CAAC,CAACc,GAAF,CAAMP,IAAI,CAAC,CAAD,CAAV,CAAhB,EAA+BP,CAAC,CAACc,GAAF,CAAMP,IAAI,CAAC,CAAD,CAAV,CAA/B,EAA8CP,CAAC,CAACc,GAAF,CAAMP,IAAI,CAAC,CAAD,CAAV,CAA9C,EAA6DP,CAAC,CAACc,GAAF,CAAMP,IAAI,CAAC,CAAD,CAAV,CAA7D,EAA4EP,CAAC,CAACc,GAAF,CAAMP,IAAI,CAAC,CAAD,CAAV,CAA5E,EAA2FP,CAAC,CAACc,GAAF,CAAMP,IAAI,CAAC,CAAD,CAAV,CAA3F;AADQ,KAAD,CAAf;AAGA,UAAMQ,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,KADD;AAELC,QAAAA,MAAM,EAAE,GAFH;AAGLC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE;AADC;AAHJ,OADO;AAQdC,MAAAA,WAAW,EAAE;AACXC,QAAAA,GAAG,EAAE;AACHC,UAAAA,UAAU,EAAE;AADT;AADM,OARC;AAadC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE,IADC;AAGdC,QAAAA,UAAU,EAAE;AACVD,UAAAA,OAAO,EAAE,KADC;AAEVE,UAAAA,SAAS,EAAE,MAFD;AAGVC,UAAAA,OAAO,EAAE,CAHC;AAIVC,UAAAA,YAAY,EAAE,CAJJ;AAKVC,UAAAA,WAAW,EAAE,CALH;AAMVC,UAAAA,WAAW,EAAE,KANH;AAOVC,UAAAA,OAAO,EAAE;AAPC;AAHE,OAbE;AA0BdC,MAAAA,MAAM,EAAE,CAAC,SAAD,CA1BM;AA2BdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,CADP;AAELC,QAAAA,MAAM,EAAE;AACNhB,UAAAA,IAAI,EAAE;AADA;AAFH,OA3BO;AAiCdiB,MAAAA,KAAK,EAAE;AACLD,QAAAA,MAAM,EAAE;AACNE,UAAAA,OAAO,EAAE;AADH;AADH;AAjCO,KAAhB;AAuCA,WACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAExB,OADX;AAEE,MAAA,MAAM,EAAEF,MAFV;AAGE,MAAA,IAAI,EAAC,KAHP;AAIE,MAAA,MAAM,EAAC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD;;AAxDsC;;AA0DzC,SAAS2B,eAAT,CAAyBC,KAAzB,EAA+B;AAC7B,SAAM;AACJnC,IAAAA,gBAAgB,EAAEmC,KAAK,CAACnC;AADpB,GAAN;AAGD;;AAED,eAAeP,OAAO,CAACyC,eAAD,EAAkB,IAAlB,CAAP,CAA+BvC,WAA/B,CAAf","sourcesContent":["import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nclass SumaryChart extends React.Component{\n  render() {\n    const dataHeat = this.props.getDataHeatChart;\n    const list = dataHeat.getDataHeatChart.map(e => e.data.map(a => a.y));\n    const series = [{\n      data: [_.sum(list[0]),_.sum(list[1]),_.sum(list[2]),_.sum(list[3]),_.sum(list[4]),_.sum(list[5]),_.sum(list[6])]\n    }];\n    const options = {\n      chart: {\n        type: 'bar',\n        height: 300,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        }\n      },\n      dataLabels: {\n        enabled: true,\n        \n    background: {\n      enabled: false,\n      foreColor: '#fff',\n      padding: 0,\n      borderRadius: 0,\n      borderWidth: 0,\n      borderColor: 'red',\n      opacity: 0.9\n  }\n      },\n      colors: ['#589e71'],\n      xaxis: {\n        categories: ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],\n        labels: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          offsetY: 5\n        }\n      }\n    }\n    return (\n      <div style={{width:\"200px\"}}>\n        <Chart\n          options={options}\n          series={series}\n          type='bar'\n          height=\"300\"\n        />\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state){\n  return{\n    getDataHeatChart: state.getDataHeatChart\n  };\n}\n\nexport default connect(mapStateToProps, null)(SumaryChart);"]},"metadata":{},"sourceType":"module"}