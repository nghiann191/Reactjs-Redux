{"ast":null,"code":"var _jsxFileName = \"/home/nghia/react-training2/front-end/src/components/PieChart/PieChart.js\";\nimport React from \"react\";\nimport { VictoryPie, VictoryLegend } from \"victory\";\nimport \"./StylePie.css\";\nimport { connect } from \"react-redux\";\nimport { setData } from \"../../actions/index\";\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    const sum = setData();\n    this.setState({\n      data: (await sum.payload).data\n    });\n    console.log(this.state.data);\n  }\n\n  render() {\n    return React.createElement(\"svg\", {\n      viewBox: \"0 0 500 500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(VictoryPie, {\n      standalone: false,\n      style: {\n        labels: {\n          fill: \"none\",\n          width: \"200px\",\n          height: \"200px\"\n        }\n      },\n      innerRadius: 100,\n      colorScale: [\"#32aeca\", \"#8e3ace\"],\n      data: this.state.data,\n      x: \"name\",\n      y: \"percent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(VictoryLegend, {\n      standalone: false,\n      data: this.state.data,\n      x: 400,\n      y: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps({\n  data\n}) {\n  return {\n    data\n  };\n}\n\nexport default connect(mapStateToProps, null)(PieChart);","map":{"version":3,"sources":["/home/nghia/react-training2/front-end/src/components/PieChart/PieChart.js"],"names":["React","VictoryPie","VictoryLegend","connect","setData","PieChart","Component","constructor","props","state","data","componentDidMount","sum","setState","payload","console","log","render","labels","fill","width","height","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,SAA1C;AACA,OAAO,gBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AACD,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,GAAG,GAAGR,OAAO,EAAnB;AACA,SAAKS,QAAL,CAAc;AACZH,MAAAA,IAAI,EAAE,CAAC,MAAME,GAAG,CAACE,OAAX,EAAoBJ;AADd,KAAd;AAGAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,IAAvB;AACD;;AACDO,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,OAAO,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAE,KADd;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAE,MAAR;AAAeC,UAAAA,KAAK,EAAC,OAArB;AAA6BC,UAAAA,MAAM,EAAC;AAApC;AAAV,OAFT;AAGE,MAAA,WAAW,EAAE,GAHf;AAIE,MAAA,UAAU,EAAE,CAAC,SAAD,EAAY,SAAZ,CAJd;AAKE,MAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWC,IALnB;AAME,MAAA,CAAC,EAAC,MANJ;AAOE,MAAA,CAAC,EAAC,SAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,oBAAC,aAAD;AACE,MAAA,UAAU,EAAE,KADd;AAEE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAFnB;AAGE,MAAA,CAAC,EAAE,GAHL;AAIE,MAAA,CAAC,EAAE,GAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAoBD;;AAnCoC;;AAqCvC,SAASY,eAAT,CAAyB;AAAEZ,EAAAA;AAAF,CAAzB,EAAmC;AACjC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD;;AAED,eAAeP,OAAO,CAACmB,eAAD,EAAkB,IAAlB,CAAP,CAA+BjB,QAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport { VictoryPie, VictoryLegend } from \"victory\";\nimport \"./StylePie.css\";\nimport { connect } from \"react-redux\";\nimport { setData } from \"../../actions/index\";\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n  async componentDidMount() {\n    const sum = setData();\n    this.setState({\n      data: (await sum.payload).data\n    });\n    console.log(this.state.data);\n  }\n  render() {\n    return (\n      <svg viewBox=\"0 0 500 500\">\n        <VictoryPie\n          standalone={false}\n          style={{ labels: { fill: \"none\",width:\"200px\",height:\"200px\" } }}\n          innerRadius={100}\n          colorScale={[\"#32aeca\", \"#8e3ace\"]}\n          data={this.state.data}\n          x=\"name\"\n          y=\"percent\"\n        />\n\n        <VictoryLegend\n          standalone={false}\n          data={this.state.data}\n          x={400}\n          y={100}\n        />\n      </svg>\n    );\n  }\n}\nfunction mapStateToProps({ data }) {\n  return { data };\n}\n\nexport default connect(mapStateToProps, null)(PieChart);\n"]},"metadata":{},"sourceType":"module"}